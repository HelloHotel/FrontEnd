{"remainingRequest":"C:\\Users\\JOSHUA\\Documents\\GitHub\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\JOSHUA\\Documents\\GitHub\\FrontEnd\\src\\components\\client\\client-offer.vue?vue&type=template&id=cec54684&scoped=true&","dependencies":[{"path":"C:\\Users\\JOSHUA\\Documents\\GitHub\\FrontEnd\\src\\components\\client\\client-offer.vue","mtime":1634709812821},{"path":"C:\\Users\\JOSHUA\\Documents\\GitHub\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JOSHUA\\Documents\\GitHub\\FrontEnd\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\JOSHUA\\Documents\\GitHub\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JOSHUA\\Documents\\GitHub\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}