{"version":3,"sources":["webpack:///../../../src/components/VToolbar/index.ts","webpack:///../../../src/directives/click-outside/index.ts","webpack:///../../../src/mixins/dependent/index.ts","webpack:///../../../src/mixins/mobile/index.ts","webpack:///../../../src/components/VOverlay/VOverlay.ts","webpack:///../../../src/components/VOverlay/index.ts","webpack:///../../../src/mixins/overlayable/index.ts","webpack:///../../../src/components/VNavigationDrawer/VNavigationDrawer.ts"],"names":["VToolbarTitle","VToolbarItems","defaultConditional","checkEvent","e","checkIsActive","root","elements","binding","el","isActive","directive","handler","setTimeout","handleShadow","callback","document","ClickOutside","inserted","onClick","onMousedown","app","lastMousedownWasOutside","unbind","searchChildren","results","index","children","child","name","data","closeDependents","isDependent","watch","openDependents","this","methods","getOpenDependents","getOpenDependentElements","result","getClickableDependentElements","$refs","overlay","props","mobileBreakpoint","type","Number","default","$vuetify","breakpoint","validator","v","isNaN","includes","String","computed","isMobile","mobile","mobileWidth","parseInt","isNumber","width","created","$attrs","hasOwnProperty","mixins","absolute","color","dark","opacity","value","zIndex","__scrim","setBackgroundColor","staticClass","style","computedOpacity","$createElement","classes","themeClasses","styles","genContent","$slots","render","h","class","hideOverlay","overlayColor","overlayOpacity","animationFrame","genOverlay","beforeDestroy","createOverlay","propsData","parent","$el","requestAnimationFrame","removeOverlay","showScroll","cancelAnimationFrame","scrollListener","up","down","checkPath","hasScrollbar","Node","window","shouldScroll","alreadyAtTop","alreadyAtBottom","scrollingUp","delta","scrollingDown","isInside","path","composedPath","dialog","selected","hideScroll","passive","baseMixins","directives","Resize","Touch","provide","isInNav","tag","bottom","clipped","disableResizeWatcher","disableRouteWatcher","expandOnHover","floating","height","miniVariant","miniVariantWidth","permanent","right","src","stateless","temporary","touchless","isMouseover","touchArea","left","stackMinZIndex","applicationProperty","computedMaxHeight","application","computedTop","computedTransform","computedWidth","isMiniVariant","hasApp","isBottom","reactsToClick","reactsToMobile","reactsToResize","reactsToRoute","showOverlay","translate","top","maxHeight","transform","$route","prev","val","beforeMount","calculateTouchArea","parentRect","closeConditional","genAppend","genPosition","genBackground","image","$scopedSlots","img","genDirectives","include","swipeRight","genListeners","on","transitionend","resizeEvent","slot","genPrepend","genBorder","init","onRouteChange","swipeLeft","Math","updateApplication","updateMiniVariant","$emit"],"mappings":"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","file":"js/chunk-d8cfc674.4356ce80.js","sourcesContent":["// Components\nimport VToolbar from './VToolbar'\n\n// Utilities\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VToolbarTitle = createSimpleFunctional('v-toolbar__title')\nconst VToolbarItems = createSimpleFunctional('v-toolbar__items')\n\nexport {\n  VToolbar,\n  VToolbarItems,\n  VToolbarTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VToolbar,\n    VToolbarItems,\n    VToolbarTitle,\n  },\n}\n","import { attachedRoot } from '../../util/dom'\nimport { VNodeDirective } from 'vue/types/vnode'\n\ninterface ClickOutsideBindingArgs {\n  handler: (e: Event) => void\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirective extends VNodeDirective {\n  value?: ((e: Event) => void) | ClickOutsideBindingArgs\n}\n\nfunction defaultConditional () {\n  return true\n}\n\nfunction checkEvent (e: PointerEvent, el: HTMLElement, binding: ClickOutsideDirective): boolean {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  const root = attachedRoot(el)\n  if (root instanceof ShadowRoot && root.host === e.target) return false\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = ((typeof binding.value === 'object' && binding.value.include) || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(el => el.contains(e.target as Node))\n}\n\nfunction checkIsActive (e: PointerEvent, binding: ClickOutsideDirective): boolean | void {\n  const isActive = (typeof binding.value === 'object' && binding.value.closeConditional) || defaultConditional\n\n  return isActive(e)\n}\n\nfunction directive (e: PointerEvent, el: HTMLElement, binding: ClickOutsideDirective) {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value!.handler\n\n  el._clickOutside!.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(() => {\n    checkIsActive(e, binding) && handler && handler(e)\n  }, 0)\n}\n\nfunction handleShadow (el: HTMLElement, callback: Function): void {\n  const root = attachedRoot(el)\n\n  callback(document.body)\n\n  if (root instanceof ShadowRoot) {\n    callback(root)\n  }\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  inserted (el: HTMLElement, binding: ClickOutsideDirective) {\n    const onClick = (e: Event) => directive(e as PointerEvent, el, binding)\n    const onMousedown = (e: Event) => {\n      el._clickOutside!.lastMousedownWasOutside = checkEvent(e as PointerEvent, el, binding)\n    }\n\n    handleShadow(el, (app: HTMLElement) => {\n      app.addEventListener('click', onClick, true)\n      app.addEventListener('mousedown', onMousedown, true)\n    })\n\n    el._clickOutside = {\n      lastMousedownWasOutside: true,\n      onClick,\n      onMousedown,\n    }\n  },\n\n  unbind (el: HTMLElement) {\n    if (!el._clickOutside) return\n\n    handleShadow(el, (app: HTMLElement) => {\n      if (!app || !el._clickOutside) return\n      app.removeEventListener('click', el._clickOutside.onClick, true)\n      app.removeEventListener('mousedown', el._clickOutside.onMousedown, true)\n    })\n\n    delete el._clickOutside\n  },\n}\n\nexport default ClickOutside\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n","// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<number | BreakpointName>,\n      default (): number | BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n","// Styles\nimport './VOverlay.sass'\n\n// Mixins\nimport Colorable from './../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport Toggleable from './../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Themeable,\n  Toggleable\n).extend({\n  name: 'v-overlay',\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: '#212121',\n    },\n    dark: {\n      type: Boolean,\n      default: true,\n    },\n    opacity: {\n      type: [Number, String],\n      default: 0.46,\n    },\n    value: {\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 5,\n    },\n  },\n\n  computed: {\n    __scrim (): VNode {\n      const data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-overlay__scrim',\n        style: {\n          opacity: this.computedOpacity,\n        },\n      })\n\n      return this.$createElement('div', data)\n    },\n    classes (): object {\n      return {\n        'v-overlay--absolute': this.absolute,\n        'v-overlay--active': this.isActive,\n        ...this.themeClasses,\n      }\n    },\n    computedOpacity (): number {\n      return Number(this.isActive ? this.opacity : 0)\n    },\n    styles (): object {\n      return {\n        zIndex: this.zIndex,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-overlay__content',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.__scrim]\n\n    if (this.isActive) children.push(this.genContent())\n\n    return h('div', {\n      staticClass: 'v-overlay',\n      class: this.classes,\n      style: this.styles,\n    }, children)\n  },\n})\n","import VOverlay from './VOverlay'\n\nexport { VOverlay }\n\nexport default VOverlay\n","// Components\nimport VOverlay from '../../components/VOverlay'\n\n// Utilities\nimport {\n  keyCodes,\n  addOnceEventListener,\n  addPassiveEventListener,\n  getZIndex,\n} from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\n\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\ninterface Stackable extends Vue {\n  activeZIndex: number\n}\n\ninterface options {\n  absolute?: boolean\n  $refs: {\n    dialog?: HTMLElement\n    content?: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable & Stackable & options>().extend({\n  name: 'overlayable',\n\n  props: {\n    hideOverlay: Boolean,\n    overlayColor: String,\n    overlayOpacity: [Number, String],\n  },\n\n  data () {\n    return {\n      animationFrame: 0,\n      overlay: null as InstanceType<typeof VOverlay> | null,\n    }\n  },\n\n  watch: {\n    hideOverlay (value) {\n      if (!this.isActive) return\n\n      if (value) this.removeOverlay()\n      else this.genOverlay()\n    },\n  },\n\n  beforeDestroy () {\n    this.removeOverlay()\n  },\n\n  methods: {\n    createOverlay () {\n      const overlay = new VOverlay({\n        propsData: {\n          absolute: this.absolute,\n          value: false,\n          color: this.overlayColor,\n          opacity: this.overlayOpacity,\n        },\n      })\n\n      overlay.$mount()\n\n      const parent = this.absolute\n        ? this.$el.parentNode\n        : document.querySelector('[data-app]')\n\n      parent && parent.insertBefore(overlay.$el, parent.firstChild)\n\n      this.overlay = overlay\n    },\n    genOverlay () {\n      this.hideScroll()\n\n      if (this.hideOverlay) return\n\n      if (!this.overlay) this.createOverlay()\n\n      this.animationFrame = requestAnimationFrame(() => {\n        if (!this.overlay) return\n\n        if (this.activeZIndex !== undefined) {\n          this.overlay.zIndex = String(this.activeZIndex - 1)\n        } else if (this.$el) {\n          this.overlay.zIndex = getZIndex(this.$el)\n        }\n\n        this.overlay.value = true\n      })\n\n      return true\n    },\n    /** removeOverlay(false) will not restore the scollbar afterwards */\n    removeOverlay (showScroll = true) {\n      if (this.overlay) {\n        addOnceEventListener(this.overlay.$el, 'transitionend', () => {\n          if (\n            !this.overlay ||\n            !this.overlay.$el ||\n            !this.overlay.$el.parentNode ||\n            this.overlay.value ||\n            this.isActive\n          ) return\n\n          this.overlay.$el.parentNode.removeChild(this.overlay.$el)\n          this.overlay.$destroy()\n          this.overlay = null\n        })\n\n        // Cancel animation frame in case\n        // overlay is removed before it\n        // has finished its animation\n        cancelAnimationFrame(this.animationFrame)\n\n        this.overlay.value = false\n      }\n\n      showScroll && this.showScroll()\n    },\n    scrollListener (e: WheelEvent & KeyboardEvent) {\n      if (e.type === 'keydown') {\n        if (\n          ['INPUT', 'TEXTAREA', 'SELECT'].includes((e.target as Element).tagName) ||\n          // https://github.com/vuetifyjs/vuetify/issues/4715\n          (e.target as HTMLElement).isContentEditable\n        ) return\n\n        const up = [keyCodes.up, keyCodes.pageup]\n        const down = [keyCodes.down, keyCodes.pagedown]\n\n        if (up.includes(e.keyCode)) {\n          (e as any).deltaY = -1\n        } else if (down.includes(e.keyCode)) {\n          (e as any).deltaY = 1\n        } else {\n          return\n        }\n      }\n\n      if (e.target === this.overlay ||\n        (e.type !== 'keydown' && e.target === document.body) ||\n        this.checkPath(e)) e.preventDefault()\n    },\n    hasScrollbar (el?: Element) {\n      if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n      const style = window.getComputedStyle(el)\n      return ['auto', 'scroll'].includes(style.overflowY!) && el.scrollHeight > el.clientHeight\n    },\n    shouldScroll (el: Element, delta: number): boolean {\n      if (el.hasAttribute('data-app')) return false\n\n      const alreadyAtTop = el.scrollTop === 0\n      const alreadyAtBottom = el.scrollTop + el.clientHeight === el.scrollHeight\n      const scrollingUp = delta < 0\n      const scrollingDown = delta > 0\n\n      if (!alreadyAtTop && scrollingUp) return true\n      if (!alreadyAtBottom && scrollingDown) return true\n      if ((alreadyAtTop || alreadyAtBottom)) {\n        return this.shouldScroll(el.parentNode as Element, delta)\n      }\n\n      return false\n    },\n    isInside (el: Element, parent: Element): boolean {\n      if (el === parent) {\n        return true\n      } else if (el === null || el === document.body) {\n        return false\n      } else {\n        return this.isInside(el.parentNode as Element, parent)\n      }\n    },\n    checkPath (e: WheelEvent) {\n      const path = e.path || this.composedPath(e)\n      const delta = e.deltaY\n\n      if (e.type === 'keydown' && path[0] === document.body) {\n        const dialog = this.$refs.dialog\n        // getSelection returns null in firefox in some edge cases, can be ignored\n        const selected = window.getSelection()!.anchorNode as Element\n        if (dialog && this.hasScrollbar(dialog) && this.isInside(selected, dialog)) {\n          return !this.shouldScroll(dialog, delta)\n        }\n        return true\n      }\n\n      for (let index = 0; index < path.length; index++) {\n        const el = path[index]\n\n        if (el === document) return true\n        if (el === document.documentElement) return true\n        if (el === this.$refs.content) return true\n\n        if (this.hasScrollbar(el as Element)) return !this.shouldScroll(el as Element, delta)\n      }\n\n      return true\n    },\n    /**\n     * Polyfill for Event.prototype.composedPath\n     */\n    composedPath (e: WheelEvent): EventTarget[] {\n      if (e.composedPath) return e.composedPath()\n\n      const path = []\n      let el = e.target as Element\n\n      while (el) {\n        path.push(el)\n\n        if (el.tagName === 'HTML') {\n          path.push(document)\n          path.push(window)\n\n          return path\n        }\n\n        el = el.parentElement!\n      }\n      return path\n    },\n    hideScroll () {\n      if (this.$vuetify.breakpoint.smAndDown) {\n        document.documentElement!.classList.add('overflow-y-hidden')\n      } else {\n        addPassiveEventListener(window, 'wheel', this.scrollListener as EventHandlerNonNull, { passive: false })\n        window.addEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n      }\n    },\n    showScroll () {\n      document.documentElement!.classList.remove('overflow-y-hidden')\n      window.removeEventListener('wheel', this.scrollListener as EventHandlerNonNull)\n      window.removeEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n    },\n  },\n})\n","// Styles\nimport './VNavigationDrawer.sass'\n\n// Components\nimport VImg, { srcObject } from '../VImg/VImg'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Colorable from '../../mixins/colorable'\nimport Dependent from '../../mixins/dependent'\nimport Mobile from '../../mixins/mobile'\nimport Overlayable from '../../mixins/overlayable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, VNodeDirective, PropType } from 'vue'\nimport { TouchWrapper } from 'vuetify/types'\n\nconst baseMixins = mixins(\n  Applicationable('left', [\n    'isActive',\n    'isMobile',\n    'miniVariant',\n    'expandOnHover',\n    'permanent',\n    'right',\n    'temporary',\n    'width',\n  ]),\n  Colorable,\n  Dependent,\n  Mobile,\n  Overlayable,\n  SSRBootable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-navigation-drawer',\n\n  directives: {\n    ClickOutside,\n    Resize,\n    Touch,\n  },\n\n  provide (): object {\n    return {\n      isInNav: this.tag === 'nav',\n    }\n  },\n\n  props: {\n    bottom: Boolean,\n    clipped: Boolean,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    height: {\n      type: [Number, String],\n      default (): string {\n        return this.app ? '100vh' : '100%'\n      },\n    },\n    miniVariant: Boolean,\n    miniVariantWidth: {\n      type: [Number, String],\n      default: 56,\n    },\n    permanent: Boolean,\n    right: Boolean,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    stateless: Boolean,\n    tag: {\n      type: String,\n      default (): string {\n        return this.app ? 'nav' : 'aside'\n      },\n    },\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256,\n    },\n    value: null as unknown as PropType<any>,\n  },\n\n  data: () => ({\n    isMouseover: false,\n    touchArea: {\n      left: 0,\n      right: 0,\n    },\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    /**\n     * Used for setting an app value from a dynamic\n     * property. Called from applicationable.js\n     */\n    applicationProperty (): string {\n      return this.right ? 'right' : 'left'\n    },\n    classes (): object {\n      return {\n        'v-navigation-drawer': true,\n        'v-navigation-drawer--absolute': this.absolute,\n        'v-navigation-drawer--bottom': this.bottom,\n        'v-navigation-drawer--clipped': this.clipped,\n        'v-navigation-drawer--close': !this.isActive,\n        'v-navigation-drawer--fixed': !this.absolute && (this.app || this.fixed),\n        'v-navigation-drawer--floating': this.floating,\n        'v-navigation-drawer--is-mobile': this.isMobile,\n        'v-navigation-drawer--is-mouseover': this.isMouseover,\n        'v-navigation-drawer--mini-variant': this.isMiniVariant,\n        'v-navigation-drawer--custom-mini-variant': Number(this.miniVariantWidth) !== 56,\n        'v-navigation-drawer--open': this.isActive,\n        'v-navigation-drawer--open-on-hover': this.expandOnHover,\n        'v-navigation-drawer--right': this.right,\n        'v-navigation-drawer--temporary': this.temporary,\n        ...this.themeClasses,\n      }\n    },\n    computedMaxHeight (): number | null {\n      if (!this.hasApp) return null\n\n      const computedMaxHeight = (\n        this.$vuetify.application.bottom +\n        this.$vuetify.application.footer +\n        this.$vuetify.application.bar\n      )\n\n      if (!this.clipped) return computedMaxHeight\n\n      return computedMaxHeight + this.$vuetify.application.top\n    },\n    computedTop (): number {\n      if (!this.hasApp) return 0\n\n      let computedTop = this.$vuetify.application.bar\n\n      computedTop += this.clipped\n        ? this.$vuetify.application.top\n        : 0\n\n      return computedTop\n    },\n    computedTransform (): number {\n      if (this.isActive) return 0\n      if (this.isBottom) return 100\n      return this.right ? 100 : -100\n    },\n    computedWidth (): string | number {\n      return this.isMiniVariant ? this.miniVariantWidth : this.width\n    },\n    hasApp (): boolean {\n      return (\n        this.app &&\n        (!this.isMobile && !this.temporary)\n      )\n    },\n    isBottom (): boolean {\n      return this.bottom && this.isMobile\n    },\n    isMiniVariant (): boolean {\n      return (\n        !this.expandOnHover &&\n        this.miniVariant\n      ) || (\n        this.expandOnHover &&\n        !this.isMouseover\n      )\n    },\n    isMobile (): boolean {\n      return (\n        !this.stateless &&\n        !this.permanent &&\n        Mobile.options.computed.isMobile.call(this)\n      )\n    },\n    reactsToClick (): boolean {\n      return (\n        !this.stateless &&\n        !this.permanent &&\n        (this.isMobile || this.temporary)\n      )\n    },\n    reactsToMobile (): boolean {\n      return (\n        this.app &&\n        !this.disableResizeWatcher &&\n        !this.permanent &&\n        !this.stateless &&\n        !this.temporary\n      )\n    },\n    reactsToResize (): boolean {\n      return !this.disableResizeWatcher && !this.stateless\n    },\n    reactsToRoute (): boolean {\n      return (\n        !this.disableRouteWatcher &&\n        !this.stateless &&\n        (this.temporary || this.isMobile)\n      )\n    },\n    showOverlay (): boolean {\n      return (\n        !this.hideOverlay &&\n        this.isActive &&\n        (this.isMobile || this.temporary)\n      )\n    },\n    styles (): object {\n      const translate = this.isBottom ? 'translateY' : 'translateX'\n      return {\n        height: convertToUnit(this.height),\n        top: !this.isBottom ? convertToUnit(this.computedTop) : 'auto',\n        maxHeight: this.computedMaxHeight != null\n          ? `calc(100% - ${convertToUnit(this.computedMaxHeight)})`\n          : undefined,\n        transform: `${translate}(${convertToUnit(this.computedTransform, '%')})`,\n        width: convertToUnit(this.computedWidth),\n      }\n    },\n  },\n\n  watch: {\n    $route: 'onRouteChange',\n    isActive (val) {\n      this.$emit('input', val)\n    },\n    /**\n     * When mobile changes, adjust the active state\n     * only when there has been a previous value\n     */\n    isMobile (val, prev) {\n      !val &&\n        this.isActive &&\n        !this.temporary &&\n        this.removeOverlay()\n\n      if (prev == null ||\n        !this.reactsToResize ||\n        !this.reactsToMobile\n      ) return\n\n      this.isActive = !val\n    },\n    permanent (val) {\n      // If enabling prop enable the drawer\n      if (val) this.isActive = true\n    },\n    showOverlay (val) {\n      if (val) this.genOverlay()\n      else this.removeOverlay()\n    },\n    value (val) {\n      if (this.permanent) return\n\n      if (val == null) {\n        this.init()\n        return\n      }\n\n      if (val !== this.isActive) this.isActive = val\n    },\n    expandOnHover: 'updateMiniVariant',\n    isMouseover (val) {\n      this.updateMiniVariant(!val)\n    },\n  },\n\n  beforeMount () {\n    this.init()\n  },\n\n  methods: {\n    calculateTouchArea () {\n      const parent = this.$el.parentNode as Element\n\n      if (!parent) return\n\n      const parentRect = parent.getBoundingClientRect()\n\n      this.touchArea = {\n        left: parentRect.left + 50,\n        right: parentRect.right - 50,\n      }\n    },\n    closeConditional () {\n      return this.isActive && !this._isDestroyed && this.reactsToClick\n    },\n    genAppend () {\n      return this.genPosition('append')\n    },\n    genBackground () {\n      const props = {\n        height: '100%',\n        width: '100%',\n        src: this.src,\n      }\n\n      const image = this.$scopedSlots.img\n        ? this.$scopedSlots.img(props)\n        : this.$createElement(VImg, { props })\n\n      return this.$createElement('div', {\n        staticClass: 'v-navigation-drawer__image',\n      }, [image])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives = [{\n        name: 'click-outside',\n        value: {\n          handler: () => { this.isActive = false },\n          closeConditional: this.closeConditional,\n          include: this.getOpenDependentElements,\n        },\n      }]\n\n      if (!this.touchless && !this.stateless) {\n        directives.push({\n          name: 'touch',\n          value: {\n            parent: true,\n            left: this.swipeLeft,\n            right: this.swipeRight,\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genListeners () {\n      const on: Record<string, (e: Event) => void> = {\n        transitionend: (e: Event) => {\n          if (e.target !== e.currentTarget) return\n          this.$emit('transitionend', e)\n\n          // IE11 does not support new Event('resize')\n          const resizeEvent = document.createEvent('UIEvents')\n          resizeEvent.initUIEvent('resize', true, false, window, 0)\n          window.dispatchEvent(resizeEvent)\n        },\n      }\n\n      if (this.miniVariant) {\n        on.click = () => this.$emit('update:mini-variant', false)\n      }\n\n      if (this.expandOnHover) {\n        on.mouseenter = () => (this.isMouseover = true)\n        on.mouseleave = () => (this.isMouseover = false)\n      }\n\n      return on\n    },\n    genPosition (name: 'prepend' | 'append') {\n      const slot = getSlot(this, name)\n\n      if (!slot) return slot\n\n      return this.$createElement('div', {\n        staticClass: `v-navigation-drawer__${name}`,\n      }, slot)\n    },\n    genPrepend () {\n      return this.genPosition('prepend')\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-navigation-drawer__content',\n      }, this.$slots.default)\n    },\n    genBorder () {\n      return this.$createElement('div', {\n        staticClass: 'v-navigation-drawer__border',\n      })\n    },\n    init () {\n      if (this.permanent) {\n        this.isActive = true\n      } else if (this.stateless ||\n        this.value != null\n      ) {\n        this.isActive = this.value\n      } else if (!this.temporary) {\n        this.isActive = !this.isMobile\n      }\n    },\n    onRouteChange () {\n      if (this.reactsToRoute && this.closeConditional()) {\n        this.isActive = false\n      }\n    },\n    swipeLeft (e: TouchWrapper) {\n      if (this.isActive && this.right) return\n      this.calculateTouchArea()\n\n      if (Math.abs(e.touchendX - e.touchstartX) < 100) return\n      if (this.right &&\n        e.touchstartX >= this.touchArea.right\n      ) this.isActive = true\n      else if (!this.right && this.isActive) this.isActive = false\n    },\n    swipeRight (e: TouchWrapper) {\n      if (this.isActive && !this.right) return\n      this.calculateTouchArea()\n\n      if (Math.abs(e.touchendX - e.touchstartX) < 100) return\n      if (!this.right &&\n        e.touchstartX <= this.touchArea.left\n      ) this.isActive = true\n      else if (this.right && this.isActive) this.isActive = false\n    },\n    /**\n     * Update the application layout\n     */\n    updateApplication () {\n      if (\n        !this.isActive ||\n        this.isMobile ||\n        this.temporary ||\n        !this.$el\n      ) return 0\n\n      const width = Number(this.computedWidth)\n\n      return isNaN(width) ? this.$el.clientWidth : width\n    },\n    updateMiniVariant (val: boolean) {\n      if (this.miniVariant !== val) this.$emit('update:mini-variant', val)\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genPrepend(),\n      this.genContent(),\n      this.genAppend(),\n      this.genBorder(),\n    ]\n\n    if (this.src || getSlot(this, 'img')) children.unshift(this.genBackground())\n\n    return h(this.tag, this.setBackgroundColor(this.color, {\n      class: this.classes,\n      style: this.styles,\n      directives: this.genDirectives(),\n      on: this.genListeners(),\n    }), children)\n  },\n})\n"],"sourceRoot":""}